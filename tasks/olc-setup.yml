---
# Sets up a basic and almost empty OLC
# slapd must not run.
- name: Check if OLC is initialized
  stat:
    path: "{{ olccreated_flag }}"
  register: olccreated

- name: Wipe default OLC
  file:
    path: "{{ slapd_olc_dir }}"
    state: absent
  when: not olccreated.stat.exists

- name: Create new slapd OLC location
  file:
    path: "{{ slapd_olc_dir }}"
    state: directory
    owner: "{{ slapd_user }}"
    group: "{{ slapd_group }}"
    mode: 0770

- name: Hash OLC password
  command: "/bin/bash -c '/usr/sbin/slappasswd -c \\$6\\$%s.16 -n -T /dev/stdin < <(echo -n $password)'"
  environment:
    password: "{{ slapd_olc_rootdn_password | mandatory }}"
  register: hashedPassword
  when: not olccreated.stat.exists
  changed_when: false

- name: Create basic OLC configuration
  template:
    src: slapd.conf.j2
    dest: "{{ olc_tmp }}"
    mode: 0444
  when: not olccreated.stat.exists

# Not using become the user may be overridden
- name: Apply basic OLC configuration
  command: "/usr/sbin/slaptest -f {{ olc_tmp }} -F {{ slapd_olc_dir }}"
  become: yes
  become_user: "{{ slapd_user }}"
  when: not olccreated.stat.exists

- name: Clean OLC configuration
  file:
    path: "{{ olc_tmp }}"
    state: absent

- name: Load core schema
  shell: "schema2ldif {{ slapd_schema_dir }}/core.schema | slapadd -b cn=config -F {{ slapd_olc_dir }}"
  when: not olccreated.stat.exists

- name: Give the LDAP user back ownership
  file:
    path: "{{ slapd_olc_dir }}"
    owner: "{{ slapd_user }}"
    group: "{{ slapd_group }}"
    mode: 0770
    recurse: yes

- name: Create OLC flag
  file:
    path: "{{ olccreated_flag }}"
    state: touch
  when: not olccreated.stat.exists

